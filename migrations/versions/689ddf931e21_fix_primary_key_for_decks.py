"""Fix primary key for decks

Revision ID: 689ddf931e21
Revises: 
Create Date: 2025-03-17 18:14:17.963803

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '689ddf931e21'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('commanders',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('scryfall_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('mana_cost', sa.String(), nullable=True),
    sa.Column('type_line', sa.String(), nullable=True),
    sa.Column('oracle_text', sa.Text(), nullable=True),
    sa.Column('power', sa.String(), nullable=True),
    sa.Column('toughness', sa.String(), nullable=True),
    sa.Column('loyalty', sa.String(), nullable=True),
    sa.Column('colors', sa.String(), nullable=True),
    sa.Column('color_identity', sa.String(), nullable=True),
    sa.Column('set_name', sa.String(), nullable=True),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('scryfall_id')
    )
    op.create_table('deck_types',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('hash', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('decks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('deck_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['deck_type_id'], ['deck_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('commander_decks',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('deck_id', sa.Integer(), nullable=False),
    sa.Column('commander_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['commander_id'], ['commanders.id'], ),
    sa.ForeignKeyConstraint(['deck_id'], ['decks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_decks',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('deck_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['deck_id'], ['decks.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('matches',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('timestamp', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('result', sa.Integer(), nullable=False),
    sa.Column('user_deck_id', sa.Integer(), nullable=False),
    sa.CheckConstraint('result IN (0, 1, 2)', name='check_match_result'),
    sa.ForeignKeyConstraint(['user_deck_id'], ['user_decks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('matches')
    op.drop_table('user_decks')
    op.drop_table('commander_decks')
    op.drop_table('decks')
    op.drop_table('users')
    op.drop_table('deck_types')
    op.drop_table('commanders')
    # ### end Alembic commands ###

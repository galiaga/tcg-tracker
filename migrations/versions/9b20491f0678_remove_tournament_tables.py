"""Remove tournament tables

Revision ID: 9b20491f0678
Revises: ef2266fba4d1
Create Date: 2025-05-27 15:33:40.696432

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '9b20491f0678'
down_revision = 'ef2266fba4d1'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - adjusted for dependencies ###

    # Drop tournament_participants first (child table to tournaments)
    op.drop_index('ix_tournament_participants_dropped', table_name='tournament_participants')
    op.drop_index('ix_tournament_participants_is_active', table_name='tournament_participants')
    op.drop_table('tournament_participants')

    # Then drop tournaments (parent table)
    op.drop_index('ix_tournaments_event_date', table_name='tournaments')
    op.drop_index('ix_tournaments_is_active', table_name='tournaments')
    op.drop_index('ix_tournaments_name', table_name='tournaments')
    op.drop_index('ix_tournaments_organizer_id', table_name='tournaments')
    op.drop_index('ix_tournaments_status', table_name='tournaments')
    op.drop_table('tournaments')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - adjusted for dependencies ###

    # Create tournaments table first (parent table)
    op.create_table('tournaments',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('event_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('format', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('pairing_system', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('max_players', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('organizer_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['organizer_id'], ['users.id'], name='tournaments_organizer_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='tournaments_pkey')
    )
    op.create_index('ix_tournaments_status', 'tournaments', ['status'], unique=False)
    op.create_index('ix_tournaments_organizer_id', 'tournaments', ['organizer_id'], unique=False)
    op.create_index('ix_tournaments_name', 'tournaments', ['name'], unique=False)
    op.create_index('ix_tournaments_is_active', 'tournaments', ['is_active'], unique=False)
    op.create_index('ix_tournaments_event_date', 'tournaments', ['event_date'], unique=False)

    # Then create tournament_participants table (child table to tournaments)
    op.create_table('tournament_participants',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('tournament_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('deck_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('registration_date', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.Column('dropped', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['deck_id'], ['decks.id'], name='tournament_participants_deck_id_fkey'),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournaments.id'], name='tournament_participants_tournament_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='tournament_participants_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='tournament_participants_pkey'),
    sa.UniqueConstraint('tournament_id', 'user_id', name='uq_tournament_user')
    )
    op.create_index('ix_tournament_participants_is_active', 'tournament_participants', ['is_active'], unique=False)
    op.create_index('ix_tournament_participants_dropped', 'tournament_participants', ['dropped'], unique=False)
    # ### end Alembic commands ###
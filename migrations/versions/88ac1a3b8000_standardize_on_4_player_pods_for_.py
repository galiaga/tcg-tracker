"""Standardize on 4-player pods for Commander, remove pod_size and match_format

Revision ID: 88ac1a3b8000
Revises: 9b20491f0678
Create Date: 2025-06-02 15:40:24.889524

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '88ac1a3b8000'
down_revision = '9b20491f0678' # Make sure this is your actual previous revision
branch_labels = None
depends_on = None

# Name of the new check constraint from your Python model
NEW_PLAYER_POSITION_COMMANDER_CONSTRAINT_NAME = 'check_player_position_commander'

def upgrade():
    # ### commands auto generated by Alembic - adjusted! ###
    with op.batch_alter_table('logged_matches', schema=None) as batch_op:
        batch_op.add_column(sa.Column('player_position', sa.Integer(), nullable=True))
        batch_op.create_index(op.f('ix_logged_matches_player_position'), ['player_position'], unique=False)
        batch_op.drop_column('match_format')

        # Add the new check constraint for player_position (1-4 for Commander)
        batch_op.create_check_constraint(
            NEW_PLAYER_POSITION_COMMANDER_CONSTRAINT_NAME,
            "player_position IS NULL OR (player_position >= 1 AND player_position <= 4)"
        )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - adjusted! ###
    with op.batch_alter_table('logged_matches', schema=None) as batch_op:
        # Drop the new check constraint first
        try:
            batch_op.drop_constraint(NEW_PLAYER_POSITION_COMMANDER_CONSTRAINT_NAME, type_='check')
        except Exception as e:
            print(f"Could not drop constraint {NEW_PLAYER_POSITION_COMMANDER_CONSTRAINT_NAME} (may not exist): {e}")

        batch_op.add_column(sa.Column('match_format', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
        batch_op.drop_index(op.f('ix_logged_matches_player_position'))
        batch_op.drop_column('player_position')
    # ### end Alembic commands ###